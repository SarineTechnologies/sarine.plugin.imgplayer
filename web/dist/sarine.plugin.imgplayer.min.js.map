{"version":3,"sources":["sarine.plugin.imgplayer.js"],"names":["$","imgplay","element","options","defaults","startImage","totalImages","imageName","urlDir","rate","height","width","autoPlay","autoReverse","$el","$canvas","screen","playing","direction","total","index","playTimer","loadProgress","playProgress","plugin","this","settings","frames","init","img","extend","Object","keys","map","key","console","error","indexOf","i","replace","append","get","addClass","css","prop","getContext","initEvents","find","detach","parseInt","length","play","setTimeout","toFrame","clearTimeout","drawFrame","trigger","pause","stop","reverse","Deferred","resolve","progress","playBar","getCurrentPoint","target","e","originalEvent","touches","changedTouches","pageX","offset","left","progressOnMouseDown","indexOnMouseDown","mousePosOnMouseDown","curPosX","prevPosX","isRightDirection","on","preventDefault","Math","floor","mousePosOnMouseDownFrame","curPosXFrame","move","$img","clearRect","drawImage","ceil","drawProgress","fn","each","undefined","data","jQuery"],"mappings":"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","file":"sarine.plugin.imgplayer.min.js","sourcesContent":["(function($) {\r\n\r\n    $.imgplay = function(element, options) {\r\n        var defaults = {\r\n            startImage: 0,\r\n            totalImages: null,\r\n            imageName: null,                            \r\n            urlDir: null,\r\n            rate: null,\r\n            height: null,\r\n            width: null,\r\n            autoPlay: true,\r\n            autoReverse: false\r\n        };\r\n\r\n        var el = element;\r\n        var $el = $(element);\r\n\r\n        var $canvas = null;\r\n        var screen = null;\r\n        var playing = false;\r\n        var direction = 'forward';\r\n        var page = 1;\r\n        var total = 0;\r\n        var index = 0;\r\n        var playTimer = null;\r\n        var loadProgress = 0;\r\n        var playProgress = 0;\r\n\r\n        var plugin = this;\r\n        plugin.settings = {};\r\n        plugin.frames = [];\r\n\r\n        plugin.init = function() {\r\n            plugin.settings = $.extend({}, defaults, options);\r\n            \r\n            // Check plugin options\r\n            Object.keys(plugin.settings).map(function(key, index) {\r\n                if (plugin.settings[key] === null) {\r\n                    console.error('Sarine imageplayer error: ' + key + ' is undefined in plugin configuration');\r\n                }\r\n            });\r\n\r\n            if (plugin.settings.urlDir.indexOf('{num}') === -1) {\r\n                console.error('Sarine imageplayer error: urlDir should contain {num} string in the image name, like: Image_{num}.jpg');\r\n            }\r\n\r\n            // Load images\r\n            var img;\r\n            total = plugin.settings.totalImages;\r\n            for (var i = plugin.settings.startImage; i < plugin.settings.totalImages + plugin.settings.startImage; ++i) {\r\n                img = '<img class=\"imageplay_loaded\" src=\"' + plugin.settings.urlDir.replace('{num}', i) + '\" />';\r\n                $el.append(img);\r\n                plugin.frames[i+1] = $(img).get(0);\r\n            }\r\n            \r\n            $el.addClass('sarine_imgplay');\r\n            $el.css({height: options.height, width: options.width});\r\n            \r\n            // Create canvas\r\n            $canvas = $('<canvas class=\"imgplay-canvas\">');\r\n            // $canvas.prop({height: $(plugin.frames[0]).height(), width: $(plugin.frames[0]).width()});\r\n            $canvas.prop({height: options.height, width: options.width});\r\n            \r\n            screen = $canvas.get(0).getContext('2d');\r\n            $el.append($canvas);\r\n            \r\n            initEvents();\r\n\r\n            // remove images from DOM\r\n            $el.find('img.imageplay_loaded').detach();\r\n\r\n            // default frame rate\r\n            if ( ! plugin.settings.rate ) {\r\n                plugin.settings.rate = parseInt(plugin.frames.length / 10);\r\n            }\r\n\r\n            // max rate is 100 fps and min rate is 0.001 fps\r\n            plugin.settings.rate = (plugin.settings.rate < 0.001) ? 0.001 : plugin.settings.rate;\r\n            plugin.settings.rate = (plugin.settings.rate > 100) ? 100 : plugin.settings.rate;\r\n\r\n            if (plugin.settings.autoPlay) {\r\n                plugin.play();\r\n            }\r\n            else {\r\n                setTimeout(function () {\r\n                    plugin.toFrame(plugin.settings.startImage);\r\n                }, 500);\r\n            }\r\n        };\r\n\r\n        plugin.play = function() {\r\n            playing = true;\r\n            if(playTimer != null) {\r\n                clearTimeout(playTimer);\r\n            }\r\n            \r\n            drawFrame();\r\n            $el.trigger('play');\r\n        };\r\n\r\n        plugin.pause = function() {\r\n            playing = false;\r\n            if(playTimer != null) {\r\n                clearTimeout(playTimer);\r\n            }\r\n            $el.trigger('pause');\r\n        };\r\n\r\n        plugin.stop = function() {\r\n            playing = false;\r\n            index = 0;\r\n            if(plugin.settings.autoReverse)\r\n                plugin.frames.reverse();\r\n            plugin.play();\r\n            $el.trigger('stop', plugin);\r\n        };\r\n\r\n        plugin.toFrame = function(i) {\r\n            i = i < 0 ? 0 : i;\r\n\r\n            if (plugin.frames[i]) {\r\n                index = i;\r\n                drawFrame();\r\n                return $.Deferred().resolve();\r\n            }            \r\n        };\r\n\r\n        var initEvents = function() {\r\n            \r\n            var progress = $('<div class=\"imgplay-progress\" id=\"imgplay_move\">');\r\n            var playBar = $('<div class=\"imgplay-play-bar\">');\r\n          \r\n            function getCurrentPoint (target, e) {\r\n                \r\n                var touch = null, pageX = null;\r\n                if (e.originalEvent && e.originalEvent.touches) {\r\n                    touch = e.originalEvent && e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n                    pageX = touch.pageX;\r\n                }\r\n                else {\r\n                    pageX = e.pageX;\r\n                }\r\n\r\n                return pageX - target.offset().left;\r\n            }\r\n\r\n            function startMove (e) {\r\n                plugin.pause();                    \r\n                progressOnMouseDown = true;\r\n                mousePosOnMouseDown = getCurrentPoint(progress, e); \r\n                indexOnMouseDown = index;                \r\n            }\r\n\r\n            function move (e) {\r\n                if ( ! progressOnMouseDown) return;\r\n\r\n                var target = progress;\r\n                var curPosX = getCurrentPoint(target, e);\r\n                                            \r\n                var width = target.width();\r\n                var frame = Math.floor(curPosX / width * total);\r\n                \r\n                isRightDirection = curPosX >= prevPosX;\r\n                if (isRightDirection) {\r\n                    direction = 'forward';\r\n                }\r\n                else {\r\n                    direction = 'backward';\r\n                }\r\n                \r\n                var mousePosOnMouseDownFrame = Math.floor(total / width * mousePosOnMouseDown);\r\n                var curPosXFrame = Math.floor(total / width * curPosX);\r\n                var offset;\r\n\r\n                if (curPosXFrame >= mousePosOnMouseDown) {\r\n                    offset = Math.floor(curPosXFrame - mousePosOnMouseDownFrame); \r\n                    index = indexOnMouseDown + offset;\r\n                }\r\n                else {\r\n                    offset = Math.floor(mousePosOnMouseDownFrame - curPosXFrame);\r\n                    index = indexOnMouseDown - offset;\r\n                }\r\n\r\n                if (index > total) {\r\n                    index = index - total;                                \r\n                }\r\n                else if (index < 1) {\r\n                    index = total + index;\r\n                }\r\n\r\n                plugin.toFrame(index);        \r\n                prevPosX = curPosX;\r\n            }\r\n\r\n            function finishMove () {\r\n                plugin.play();\r\n                progressOnMouseDown = false;\r\n            }\r\n\r\n            var progressOnMouseDown = false,\r\n                indexOnMouseDown = -1;\r\n                mousePosOnMouseDown = -1,\r\n                curPosX = 0,\r\n                prevPosX = 0,\r\n                isRightDirection = false;\r\n\r\n            progress\r\n                .on('mousedown touchstart', function(e) {\r\n                    e.preventDefault();\r\n                    startMove(e);                  \r\n                })\r\n                .on('mousemove touchmove', function(e) {\r\n                    e.preventDefault();\r\n                    move(e);\r\n                })\r\n                .on('mouseleave mouseup touchend', function(e) {\r\n                    finishMove(e);\r\n                });\r\n\r\n            progress.append(playBar);\r\n            $el.append(progress);\r\n        };\r\n\r\n        var drawFrame = function() {\r\n            if (screen != null) {\r\n                var img = plugin.frames[index];\r\n                var $img = $(img);\r\n\r\n                if (img && $img.prop('naturalHeight') > 0) {\r\n                    /*\r\n                    var cw = $canvas.width();\r\n                    var ch = $canvas.height();\r\n                    var iw = img.width;\r\n                    var ih = img.height;\r\n                    var vw = 0;\r\n                    var vh = 0;\r\n\r\n                    if (cw >= ch) {\r\n                        vw = iw * (ch/ih);\r\n                        vh = ch;\r\n                    } else {\r\n                        vw = cw;\r\n                        vh = ih * (cw/iw);\r\n                    }\r\n                    screen.clearRect(0, 0, cw, ch);\r\n                    screen.drawImage(img, (cw - vw) / 2, (ch - vh) / 2, vw, vh);*/\r\n                    \r\n                    screen.clearRect(0, 0, options.width, options.height);\r\n                    screen.drawImage(img, 0, 0, options.width, options.height);                    \r\n                } \r\n\r\n                if (index > plugin.frames.length) {\r\n                    plugin.stop();\r\n                    return;\r\n                }\r\n\r\n                if (playing) {\r\n                    if (direction == 'forward') {\r\n                        index++;\r\n                    } \r\n                    else {\r\n                        index--;\r\n\r\n                        if (index < 0) {\r\n                            index = plugin.frames.length + index;\r\n                        }\r\n                    }\r\n\r\n                    playTimer = setTimeout(drawFrame, Math.ceil(1000 / plugin.settings.rate));\r\n                }\r\n\r\n                drawProgress();\r\n            }\r\n        };\r\n\r\n        var drawProgress = function() {\r\n            loadProgress = ((plugin.frames.length / total) * 100);\r\n            playProgress = ((index / plugin.frames.length) * 100);\r\n\r\n            loadProgress = loadProgress > 100 ? 100 : loadProgress;\r\n            playProgress = playProgress > 100 ? 100 : playProgress;\r\n\r\n            $el.find('.imgplay-play-bar').css('width',  playProgress + '%');\r\n        };\r\n\r\n        plugin.init();\r\n    };\r\n\r\n    $.fn.imgplay = function(options) {\r\n        this.each(function() {\r\n            if($(this).data('imgplay') == undefined) {\r\n                var plugin = new $.imgplay(this, options);\r\n                $(this).data('imgplay', plugin);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n})(jQuery);"]}